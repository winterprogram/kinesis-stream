AWSTemplateFormatVersion: 2010-09-09
Description: cloudformation template to create the deployment pipeline
Parameters:
  Name:
    Description: Name of the pipeline
    Type: String
  NonProdAccount:
    Description: Non Prod Account Number
    Type: String
    Default: 495690114622
  S3Source:
    Description: Name of the S3 bucket where source is kept
    Type: String
  S3ObjectKey:
    Description: Name of the Source Path of the object
    Type: String
  TemplateFileName:
    Default: pipeline/infrastructure.yaml
    Description: The template file for all the resources to be created for a deployment
    Type: String
  CodePipelineRole:
    Default: codepipeline-role
    Description: Role for codepipeline to deploy all Resources
    Type: String
  DevStackConfig:
    Type: String
    Description: The file that contains environment variable for dev environment
    Default : pipeline/dev-config.json
  ProdStackConfig:
    Type: String
    Description: The file that contains environment variable for prod environment
    Default : pipeline/prod-config.json
  CloudformationRole:
    Type: String
    Description: Name of the create changeset for dev
    Default: cloudformation-role
  CMKARN:
    Type: String
    Description: CMKARN Created to for encryption
    Default: arn:aws:kms:ap-south-1:612479095669:key/45e8e53c-c8ae-4998-b334-1404c6587d72

Resources:
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub codepipeline-${Name}
      RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${CodePipelineRole}
      DisableInboundStageTransitions: []
      ArtifactStore:
        Type: S3
        Location: !Ref S3Source
        EncryptionKey:
          Id: !Ref CMKARN
          Type: KMS
      Stages: 
        - 
          Name: S3Source # Stage 1
          Actions:
            - Name: TemplateSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                S3Bucket: !Ref S3Source
                S3ObjectKey: !Ref S3ObjectKey
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: TemplateSource
        -
          Name: DevStage
          Actions:
            - Name: CreateChangeSet # Step 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub arn:aws:iam::${NonProdAccount}:role/${CloudformationRole}
                StackName: !Sub dev-cloudformation-${Name}
                ChangeSetName: !Sub changeset-dev-${Name}
                TemplateConfiguration: !Sub TemplateSource::${DevStackConfig}
                TemplatePath: !Sub TemplateSource::${TemplateFileName}                         
              RoleArn: !Sub arn:aws:iam::${NonProdAccount}:role/${CloudformationRole}
              RunOrder: 1
            - Name: ExecuteChangeSet # Step 2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: !Sub changeset-dev-${Name}
                RoleArn: !Sub arn:aws:iam::${NonProdAccount}:role/${CloudformationRole}
                StackName: !Sub dev-cloudformation-${Name}
              RoleArn: !Sub arn:aws:iam::${NonProdAccount}:role/${CloudformationRole}
              RunOrder: 2
            - Name: ApproveDevStack # Step 3
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              # Configuration:
              #   NotificationArn: !Ref CodePipelineSNSTopic
              #   CustomData: !Sub 'Do you want to create a change set against the production stack and delete the ${TestStackName} stack?'
              RunOrder: 3
        -
          Name: ProdStage # Stage 3
          Actions:
            - Name: CreateChangeSet # Step 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${CloudformationRole}
                StackName: !Sub prod-cloudformation-${Name}
                ChangeSetName: !Sub changeset-prod-${Name}
                TemplateConfiguration: !Sub TemplateSource::${ProdStackConfig}
                TemplatePath: !Sub TemplateSource::${TemplateFileName}                         
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${CloudformationRole}
              RunOrder: 1
            - Name: ExecuteChangeSet # Step 2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: !Sub changeset-prod-${Name}
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${CloudformationRole}
                StackName: !Sub prod-cloudformation-${Name}
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${CloudformationRole}
              RunOrder: 2
            # - Name: ApproveProdStack # Step 3
            #   ActionTypeId:
            #     Category: Approval
            #     Owner: AWS
            #     Provider: Manual
            #     Version: '1'
            #   # Configuration:
            #   #   NotificationArn: !Ref CodePipelineSNSTopic
            #   #   CustomData: !Sub 'Do you want to create a change set against the production stack and delete the ${TestStackName} stack?'
            #   RunOrder: 3
      # RestartExecutionOnUpdate: true

  AmazonCloudWatchEventRoleForPipelineTrigger:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: pipeline-execution-role
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref CodePipeline ] ]

  AmazonCloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - 'AWS API Call via CloudTrail'
        detail:
          eventSource:
            - s3.amazonaws.com
          eventName:
            - PutObject
            - CompleteMultipartUpload
          requestParameters:
            bucketName:
              - !Ref S3Source
            key:
              - !Ref S3ObjectKey
      Targets:
        -
          Arn:
            !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref CodePipeline ] ]
          RoleArn: !GetAtt AmazonCloudWatchEventRoleForPipelineTrigger.Arn
          Id: !Sub codepipeline-${Name}